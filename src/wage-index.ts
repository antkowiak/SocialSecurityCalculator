import { compound } from 'compound-calc';
export type Wages = { [key: string]: number; };

export const wageIndex: Wages = {
    1951: 2799.16,
    1952: 2973.32,
    1953: 3139.44,
    1954: 3155.64,
    1955: 3301.44,
    1956: 3532.36,
    1957: 3641.72,
    1958: 3673.8,
    1959: 3855.8,
    1960: 4007.12,
    1961: 4086.76,
    1962: 4291.4,
    1963: 4396.64,
    1964: 4576.32,
    1965: 4658.72,
    1966: 4938.36,
    1967: 5213.44,
    1968: 5571.76,
    1969: 5893.76,
    1970: 6186.24,
    1971: 6497.08,
    1972: 7133.8,
    1973: 7580.16,
    1974: 8030.76,
    1975: 8630.92,
    1976: 9226.48,
    1977: 9779.44,
    1978: 10556.03,
    1979: 11479.46,
    1980: 12513.46,
    1981: 13773.1,
    1982: 14531.34,
    1983: 15239.24,
    1984: 16135.07,
    1985: 16822.51,
    1986: 17321.82,
    1987: 18426.51,
    1988: 19334.04,
    1989: 20099.55,
    1990: 21027.98,
    1991: 21811.6,
    1992: 22935.42,
    1993: 23132.67,
    1994: 23753.53,
    1995: 24705.66,
    1996: 25913.9,
    1997: 27426.0,
    1998: 28861.44,
    1999: 30469.84,
    2000: 32154.82,
    2001: 32921.92,
    2002: 33252.09,
    2003: 34064.95,
    2004: 35648.55,
    2005: 36952.94,
    2006: 38651.41,
    2007: 40405.48,
    2008: 41334.97,
    2009: 40711.61,
    2010: 41673.83,
    2011: 42979.61,
    2012: 44321.67,
    2013: 44888.16,
    2014: 46481.52,
    2015: 48098.63,
    2016: 48642.15,
    2017: 50321.89,
    2018: 52145.8,
    2019: 54099.99,
    2020: 55628.6,
    2021: 60575.07,
};

const shortRangeIntermediate = {
    2022: 63467.98,
    2023: 66147.17,
    2024: 68627.58,
    2025: 71411.99,
    2026: 74348.48,
    2027: 77393.67,
    2028: 80510.73,
    2029: 83757.03,
    2030: 87106.49,
    2031: 90574.48,
    2032: 93995.33,
}

const longRangeIntermediate = {
    2035: 104726.27,
    2040: 125312.66,
    2045: 149423.47,
    2050: 177750.26,
    2055: 211432.09,
    2060: 251610.19,
    2065: 299758.28,
    2070: 357187.25,
    2075: 425523.96,
    2080: 506962.67,
    2085: 603863.51,
    2090: 719124.11,
    2095: 856091.73,
    2100: 1019162.94,
}
const fillBlanks = (vals: Wages) => Object.entries(vals).reduce((acc, [year, P], index, arr) => {
    let thing;
    if(arr[index+1]) {
        const [nextYear, A] = arr[index+1];
        const t = parseInt(nextYear) - parseInt(year);
        const r = Math.pow((A/P),(1/t))-1
        const vals: number[] = compound(P,0,t,r).result.slice(0, -1);
        const ret: Wages = vals.reduce((accx, cur, i): Wages => ((accx[(parseInt(year) + i).toString()] = cur) && accx) as Wages,{} as Wages);
        thing = {...acc, ...ret};
    } else {
        thing = {...acc, ...{[year]: P}};
    }
    return thing;
}, {});
